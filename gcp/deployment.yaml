apiVersion: v1
kind: Namespace
metadata:
  name: app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcpgolangapp-deploy
  namespace: app 
spec:
  selector:
    matchLabels:
      app: gcpgolangapp
  replicas: 1
  template:
    metadata:
      labels:
        app: gcpgolangapp
    spec:
      containers:
      - name: gcpgolangapp
        image: kodeval/gcpgolangapp
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: gcpgolangapp-svc
  namespace: app
spec:
  selector:
    app: gcpgolangapp
  ports:
  - port: 80
  type: ClusterIP # LoadBalancer # NodePort # 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcpgolangapp-deploy
  namespace: app 
spec:
  selector:
    matchLabels:
      app: gcpgolangapp
  replicas: 1
  template:
    metadata:
      labels:
        app: gcpgolangapp
    spec:
      containers:
      - name: gcpgolangapp
        image: kodeval/gcpgolangapp
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: gcpgolangapp-svc
  namespace: app
spec:
  selector:
    app: gcpgolangapp
  ports:
  - port: 80
  type: ClusterIP # LoadBalancer # NodePort # 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcpdefaultapp-deploy
  namespace: app 
spec:
  selector:
    matchLabels:
      app: gcpdefaultapp
  replicas: 1
  template:
    metadata:
      labels:
        app: gcpdefaultapp
    spec:
      containers:
      - name: gcpdefaultapp
        image: kodeval/gcpdefaultapp
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: gcpdefaultapp-svc
  namespace: app
spec:
  selector:
    app: gcpdefaultapp
  ports:
  - port: 80
  type: ClusterIP # LoadBalancer # NodePort # 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcpdefaultapp-deploy
  namespace: app 
spec:
  selector:
    matchLabels:
      app: gcpdefaultapp
  replicas: 1
  template:
    metadata:
      labels:
        app: gcpdefaultapp
    spec:
      containers:
      - name: gcpdefaultapp
        image: kodeval/gcpdefaultapp
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: gcpdefaultapp-svc
  namespace: app
spec:
  selector:
    app: gcpdefaultapp
  ports:
  - port: 80
  type: ClusterIP # LoadBalancer # NodePort # 
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: webapp-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: gcpgolangapp-svc
          servicePort: 80
        path: /go(/|$)(.*)
      - backend:
          serviceName: gcpotherapp-svc
          servicePort: 80
        path: /other(/|$)(.*)
  - host: gcp.erko.digital # change the IP address here
    http:
      paths:
      - backend:
          serviceName: gcpdefaultapp-svc
          servicePort: 80
        path: /
      - backend:
          serviceName: gcpgolangapp-svc
          servicePort: 80
        path: /go
      - backend:
          serviceName: gcpotherapp-svc
          servicePort: 80
        path: /other
